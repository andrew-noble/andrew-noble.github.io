/*Stuff I don't need to be responsive goes up here at the top*/

section {
  padding: 1rem;
}

main {
  overflow-y: auto;
}

body {
  margin: 0;
  display: grid;
  /*OMG big learning: 1fr refers to the fraction of available space, not of total space, so below gives me fixed 300px sidebar and halves the remaining space */
  grid-template-columns: 300px 1fr;
  height: 100vh;
}

header {
  /*The linear gradient gives it that darker-toward the bottom look*/
  background-image: linear-gradient(rgb(255 255 255 / 0%), rgb(0 0 0 / 87.5%)),
    url(./assets/images/me2.jpeg);
  background-size: cover;
  background-position: 28%;
  /* These are actually unneccesary, the html structuring assumes that the two cells will be
  filled by header and main. Neat.
  grid-row-start: 1;
  grid-row-end: -1;*/
  overflow-y: hidden;
}
#profile-content {
  position: relative;
  top: 65%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: start;
  padding: 0px 25px;
}
#profile-content * {
  margin: 10px 0px;
  color: white;
  font-family: Work Sans, sans-serif;
}
#socials img {
  display: inline;
  height: 30px;
  margin-right: 10px;
}

.intro {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}
.blurb {
  width: 70ch;
  text-align: center;
  font-size: larger;
}
.item {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 0.5rem;
}
.item-body {
  display: flex;
  flex-direction: column;
  justify-content: left;
  padding: 1rem;
  flex: 0 1 60ch;
}
.item-photo {
  padding: 1rem;
  flex: 0 1 40%;
  /*At a loss for why I need this... I thought the 40% above would do this.*/
  max-width: 40%;
}

.item-blurb {
  font-size: larger;
}

.title {
  margin-bottom: 0;
}

#professional {
  background-color: #d3e6ff;
}

#adventure {
  background-color: #b4d4ff;
}

#handiwork {
  background-color: #86b6f6;
}

#writing {
  background-color: #88adb9;
  padding-bottom: 2rem;
}

button {
  font-size: 1.5rem;
  color: white;
  background-color: #d47012;
  border-radius: 0.4rem;
  border: none;
  cursor: pointer;
}

/*Lesson learned, these should go at the end of the CSS doc so that they take
precedence over unaffiliated media queries when the condition for the media
query is met. Otherwise, the general CSS rules will rule. */
@media (max-width: 992px) {
  /*This just gets the items to align vertically instead of horiz at smartphone sizes*/
  .item {
    flex-direction: column-reverse;
    border-top: 1px solid black;
  }
  .item-photo,
  .item-body {
    flex: 0 1 auto;
  }

  /*This is more complex and switches the sidebar to a hero at the top.
  Basically just reformats the sidebar into a topbar as smartphone sizes.*/

  body {
    /*First we have to disable the old layout, then apply the new*/
    grid-template-columns: none;
    grid-template-rows: 150px 1fr;
  }

  header {
    /*Also have to undo stuff here, prolly not best practice*/
    background-image: unset;
    background-image: url(./assets/images/me2.jpeg);
    background-size: cover;
    background-position: 50% 17%;
    overflow-x: hidden;
    border-bottom: 1px black solid;
  }
  #profile-content {
    flex-direction: row;
    top: unset;
    justify-content: space-evenly;
  }
  #profile-blurb {
    display: none;
  }
  h1 {
    color: black;
  }
}

@media (min-width: 992px) {
  /*At laptop and desktop sizes, this gives me that nice reversing of each item, looks pleasing aesthetically*/
  .two,
  .four {
    flex-direction: row-reverse;
  }
}
